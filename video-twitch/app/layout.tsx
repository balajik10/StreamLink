import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import { dark } from "@clerk/themes";
import { ThemeProvider } from "@/components/theme-provider";
import { Inter } from "next/font/google";
import {Toaster} from "sonner"



const inter =Inter({subsets:['latin']})
// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider appearance={{ baseTheme: dark }}>
      <html lang="en">
        <body
          className={inter.className}
        >
          <ThemeProvider 
          attribute="class" 
          defaultTheme="dark" 
          storageKey="gamehub-theme"
          >
            <Toaster theme="light" position="bottom-center"/>

            {children}
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { extractRouterConfig } from "uploadthing/server";

import { ourFileRouter } from "./api/uploadthing/core";

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <html lang="en">
//       <body>
//         <NextSSRPlugin
//           /**
//            * The `extractRouterConfig` will extract **only** the route configs
//            * from the router to prevent additional information from being
//            * leaked to the client. The data passed to the client is the same
//            * as if you were to fetch `/api/uploadthing` directly.
//            */
//           routerConfig={extractRouterConfig(ourFileRouter)}
//         />
//         {children}
//       </body>
//     </html>
//   );
// }

